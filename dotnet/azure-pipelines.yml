trigger:
- main

variables:
  azureSubscription: 'ac03a077-353c-4da7-9874-d5d115420f55'
  functionAppName: 'kafka-dotnet'
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - script: |
        cd dotnet
        dotnet restore
        dotnet build --configuration Release
      displayName: 'Prepare binaries'

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        arguments: '--configuration Release --output publish_output'
        projects: '*.csproj'
        publishWebProjects: false
        modifyOutputPath: false
        zipAfterPublish: false

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
          
    steps:
    - task: AzureFunctionApp@1
      displayName: 'Azure Functions App Deploy: kafka-javascript'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appType: functionAppLinux
        appName: $(functionAppName)
        package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
         deploymentMethod: runFromPackage
